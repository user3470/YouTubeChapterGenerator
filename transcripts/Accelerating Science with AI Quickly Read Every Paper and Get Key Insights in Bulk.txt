hey everybody David Shapiro here with another video so it's a really exciting time because research is accelerating um just in the last couple days a whole bunch of interesting papers have come out on archive and um you know I I could read them all myself the the hard way the long way but you know what I'm really lazy and you know how uh Mr Henry Ford he said uh allegedly said I don't know if he actually said this but he said uh give your hardest problems to the laziest Engineers because they'll find an easier way to do it that's me that's why I became an automation engineer uh back in the day I told people like I would rather spend a week building an automation tool that I can then just push the button and for the rest of my life it makes that job easier and guess what that's how I automated a three petabyte environment because why I didn't want to manage it myself okay so uh with the volume of paper that came out because all of these came out Monday so we've got five interesting papers that came out on the same day and this happens pretty much every day lately and it is entirely too much to keep up with so rather than having to read all of these papers every day I wanted a way to digest them so I could quickly just one skim and keep on top of things uh and then also just uh basically make it sustainable or make it operationalized and so what I mean by that is something that you can just fully automate and then just maybe get an email every day or you know have the interns do it or use this as part of your literature review for science because one of the things that I want to do is use this technology to accelerate science as much as possible and uh you know one of the things that I hear from some of my friends in science is that just keeping up with things is getting harder and harder uh at least in these high velocity spaces some places like oceanography they don't change that much they don't change that fast but certainly computer science artificial intelligence uh and that sort of thing cyber security Quantum Computing these things are moving so incredibly fast we need the AI to help us keep up so let me show you what I've done uh let's see where should I start I guess I'll just start with uh some some of the final reports so basically what I do is I just copy paste the text of the thing into here obviously the figures help but language models are already pretty intelligent so they don't even really need the figures and then what I do is I feed it a series of um of questions and it gives me answers and so this basically summarizes it from you know know maybe twenty thousand forty thousand hundred thousand characters down to four thousand characters so we get a compression ratio of at least five to one but also it's often in much simpler language and probably what I'll do is I'll add a second step that will render this as an HTML document maybe I'll do that at the end um but anyways so the idea is I plug in the text if it's if it's a little too long it'll trim it but you know you get the first 22 000 characters of a paper you've got the general gist um and in many cases you actually have the whole paper uh now so I say can you give me a very clear explanation of the core assertions implications and mechanics elucidated in this paper very simple prompt it comes back and says you know yada yada yada the paper explores the concept of continual learning okay cool uh you know so it asks that question and so basically this is a this is a standard chat GPT conversation so this is a way to implement a chain of thinking um but it's really an automated dialogue so imagine that you you have an intern or a research assistant that read the paper and you can ask them a couple questions and you can change this uh on your own by the way very easily so in the code I have it here you can just add whatever questions or change whatever questions you want here and it will be happy to take it and run with with it for you entirely on its own so you change these questions if you want you add more you know depending on the research that you're looking for so let's say for instance you are in a very specific domain maybe you're trying to do this for medical research and you're really just looking for what are the implications for let's say Rejuvenation therapy or regenerative medicine or even a something even more specific maybe you're trying to research a specific kind of cancer or a specific uh any kind of metabolic disorder really so then you can say first you want it to just tell me what are the implications and then you could say okay what are the implications with respect to my particular domain what are the what what is you know what is the what is the impact to my area of research so restate it for me and then you can have it automatically spider a whole bunch of documents so one of the things that I'm going to do with this is that rather than have just one input at a time I'm going to create a folder where you give it you just download the PDFs to directly it'll scrape the PDFs and go through all of them as part of the automated process and it'll whatever the questions that you have it will kind of break it down but anyways so I have a I have a few standard questions can you explain the value of this in basic terms like you're talking to a CEO so what what's the bottom line here and it's really good at explaining things in simple terms so in this case uh this paper says the research is about making code generation models which are tools that help programmers by automating some of their work more adaptable and efficient currently these models need to be retrained every time there's a significant change to the programming languages or libraries they work with which this is what some people are noticing and I notice this too is that sometimes it'll program with an outdated version which of course limits the utility of coding models the bottom line is that this research could lead to more efficient and adaptable code generation models this means less time and money spent on retraining these models and more up-to-date and effective tools for programmers so the implication for this just reading that one paragraph to me says okay cool this is going to be part of the acceleration because if we come up with a way to make coding models uh updated they're updatable you know using continuous learning great excellent and then I said can you give me an analogy or metaphor that will help me explain this to a broad audience why because I'm a YouTuber right so the basically what I want is to be able to explain this paper in real basic terms real fast and contrary to the belief about a year ago language models are actually really good at analogy and metaphor um so it says sure let's think of the code generation models as chefs in a kitchen kitchen these chefs are trained to prepare a variety of dishes using specific recipes and ingredients however the culinary world is always evolving with new recipes and ingredients being introduced regularly in the current scenario every time a new recipe or ingredient is introduced the chef has to go through a complete retraining process which is time consuming and expensive it's as if the chef forgets all of the old recipes when they learn a new one see that's a good metaphor or I guess that's an analogy that's not a metaphor the researchers in this study developed a new Training Method for these chefs instead of forgetting old recipes when learning new ones the chefs can now continually learn and adapt adding new recipes to the repertoire while still remembering the old ones this is like a chef who can learn to cook a new dish while still remembering to cook all the previous dishes they've ever learned this new Training Method is called prompt pooling with teacher for Teacher forcing makes chefs or in the real case the code generation models more efficient and adaptable yada yada okay you get the idea so this only takes a few seconds and it takes only a few cents to run and so actually probably what I'll do is I'll pause it and I'll I'll go ahead and update it so that it'll just ingest everything in a folder and then I'll show you a nice cleaned up output so actually we'll be right back um okay so speaking of being lazy I just wanted to show you real quick I'm using my coding chat bot to do this because I'm ultra lazy work smart not hard so basically I took the script and I just copied it into my coding chat bot uh which you can find it it's literally just called coding underscore chatbot underscore assistant on my GitHub so I copied the script that I had which is all of 99 lines and I came over to my coding chatbot and I said hey can you do this for me instead and it's like sure um Okay cool so uh basically I said let's get a folder so we're using this folder so we can just download the PDFs directly to there rather than copy and pasting the text and we're just gonna take the output folder or the input folder for the PDFs and then an output folder for the um Whatchamacallit whoops okay so we come over to here and it wants us to add OS and Pi PDF um that's fine so we add that and then we see what else it wants to do if name equals main yep so it's going to do all that PDF file replace yep cool so I just I gave it really simple instructions I said can you modify this script so that it will one open every PDF in the input folder one by one and perform the same operation and two check an output folder for the report as the same PDF uh or blah check the output folder for a file of the same name this will enable us to run batches without duplicating effort should be pretty straightforward let me know if you have any questions um and okay so let's put this over here and see if it worked okay so um PDF files for files in OS Lister that looks right um open read binary as file PDF reader yep so we get that it gets all the page numbers that should all work I've used that I've used this this module before pi pdf2 and PDF file reader if it's over 22 000 characters just cut it off it seems to work well enough and then we get the report so on and so forth um let's see it looks like it's not actually checking if the file exists yep okay so this is this is close so let's take this over to the scratch pad and then we'll say um let's see it will then check the output folder for the report wait am I missing something it doesn't have a continue function um okay sorry I I think we need to check um if the final file name exists in the output folder first and then use a continue to skip the process make sense I found that if you obviously like if you get frustrated with like no you eat it like it'll be apologetic and it'll spend more time apologizing um so don't be mean to the machine if you just say sorry I think there was a misunderstanding it's actually much more helpful so words matter um be polite to your coding assistant um because if it's if just like a human if the human is spending mental energy trying to placate you know a frustrated friend or whatever it's going to waste a little bit more time and energy okay um sure here's the modified script the script will first check if the report already exists in the output folder if it does it will skip the current PDF and move to the next one excellent so let's check this out and see if it works if it if it looks how I think it should look so we'll come over here all right so for PDF file and PDF files first all right yep so first we list there we go that's what I was expecting if it exists then continue so you just skip the whole thing otherwise go ahead and open it yep there we go so we said because we set the file name first all right so this should be fine um okay I think that's I think that's uh good so let's come over here let's exit out of my coding chatbot assistant um so again like I had to put very little energy into that all I had to do was check and honestly what I could have done is just ask it to check its work like you know does it do the thing that I think it is but you saw I didn't really do any coding all I did was copy paste okay uh so let's go back out of here quickly extract science papers and then we'll do python whoops generate multiple reports no module named pi pdf2 I thought I already had it maybe that was my previous install pip install ipdf two Pi PD F2 this is the boring part okay now it should work um is deprecator and was removed used PDF reader instead so this is exactly exactly the problem that uh that the um uh this one of the papers addresses is the fact that the modules have been updated and so now it's it's uh out of date so we gotta go we gotta go switch to this thing over here um all right oh I forgot to save it that could be a problem um all right so if it ends with otherwise all right let's see if that fixed it and also it might have yard anyways because I forgot to save uh reader num pages is deprecated use Len reader pages instead okay at least at least their documentation is good and it's helping me fix it um okay um okay that should be good int object is not iterable uh [Music] and um let's see for page in so if we're doing a length so that's an end we don't need that we just need number of pages so we should do um uh let's see list of range of 0 to was it zero to that I think that's how that formatting is so I'm having to fix some of it because exactly the problem virtual list cannot be interpreted as an integer hang on huh let me just come back over here and say um I don't know what I'm doing I'm lost uh python chat um let's see I got shift enter um and you help me I'm lost I probably have the the range formatted wrong or something um let's see is typically blah blah okay four page in list range zero PDF reader pages yeah that's the that's the correct line list range zero length Okay interesting okay so it was it was not lying to me when it said I needed length of PDF reader Pages all right cool so let's see if that fixed it so let's come over here so four page in it seems like it's getting kind of long all right here let's just open another terminal uh CD quickly yada yada yada anyways well here let me just go ahead and see if it works python generate still doesn't work it's deprecated and removed oh okay there we go reader pages so we found another bug um the page num almost there oops reader is not defined [Laughter] uh oh right PDF reader there we go extract text is deprecated and removed use extract underscore text instead man okay this is like an object lesson as to why uh why this uh continuous learning needs to be done okay cool now it's thinking all right I think we fixed it so ideally what should happen is uh we'll get a list of outputs here that are going to have the same name as those so then it will not uh duplicate the efforts in the future I'll go ahead and delete the reports folder uh we can delete the inputs delete the generate report there we go okay so here we go The Continuous learning this would have actually helped this so this will actually uh this kind of thing I've actually had some conversations with people because with chat GPT having had the cutoff date in 2021 it's already losing utility because it's increasingly out of date some of that I think is deliberate on the part of open AI because they didn't want it to be able to use other people to use it to accelerate language model research or who knows what else is going on um but yeah so there there it is so we should have our first output here there we go so now you can correlate it back to exactly the same thing and you will be able to just quickly grab a whole bunch of stuff okay um yep excellent excellent excellent um python uh chat pie okay great um uh let's see I have a folder um or here let's go ahead and grab the updated version of this and put this no we can get rid of that put this in scratch pad so we've got coding scratch pad all right so let's put it there and then we'll say I have a folder uh output that is full of uh uh text files um with the file name being the name of M archive paper I would like to render all those files to HTML um let's use the file name as a header where is my there we go let's use the file name as a header uh for each section um and then there is uh there is a conversation of QA within each file which I'd like to present on the page pretty simply so let's go ahead and grab an example of the report and put it in the scratch Pad so it can see because then in the scratch Pad you just give it examples um of what you're talking about you can see an example of the plain text report in your scratch Pad um okay go uh the final output should be report dot HTML which should be fully self-contained um and pretty all right so let's see what it gives me for that meanwhile this should be the other one should be pretty much done yep so we should have we've got four we've got four papers summarized and like I said this probably cost a few cents um because it was uh you know it it does add up a little bit because each paper actually you um you have to read the entire paper three times because the conversation is three messages long so that's that's one of the only things to keep in mind is that the the more questions you ask it you're basically reading the entire paper every time to keep asking or to keep answering those questions about it um let's see get status get add get commit am all done and uh get pushed so you guys can use this and then let's hop up back over to my coding chatbot to see what it said okay cool um let's see from bs4 import beautiful soup and I'm just gonna fully send this to see if it works um just all right so then not coding chatbot quickly extract and we're going to come up here and just save this as um uh renderreport.pi so let's jump over here oops wrong terminal python renderreport.pi um no module named bs4 um import uh no pip install darn it pip install vs4 there we go all right let's try that again all right and that ran pretty much instantly so let's see if that worked hey cool look at that so it could be it could it could stand to be a little bit prettier but this is this is definitely good enough um where it's got each one with a header and so there you have it you've now got everything rendered to a nice report you can print this to PDF if you want it's searchable right you could you can say okay uh prompt where else is prompt listed excellent um yeah so I think I'm done uh I'll be using this uh to help with my video prep I can imagine that there's a whole bunch of other AI commentators out there who might be used who might start using this um but yeah it's super super simple brain dead tool hopefully it'll help accelerate science um and yeah it's out there under the MIT license so please take it use it let's accelerate science let's accelerate all science with this all right cheers