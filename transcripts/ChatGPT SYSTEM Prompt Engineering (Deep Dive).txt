I get a lot of questions about how best to use the chat GPT API so if you are a chat GPT user you might be familiar with custom instructions so the custom instructions panel that they added uh just a few months ago basically gives you the ability to tell chat GPT a little bit about yourself as well as how you want it to respond every time now this is called chat GPT custom instructions but from an API perspective on the back end which that's primarily who this video is for is not necessarily the chat GPT users but the API users on the back end the way that this looks is that there is what's called a system window so if you ever hear me refer to a system window this is what I mean and the system window is a sort of out of band set of instructions that allows you to give it any kind of content whether you're providing IT background information instructions uh or whatever I sometimes will put in entire articles here and then use the use the chat to actually discuss the article this is how I have approached for instance using the API for fiction so for instance with the most recent uh models you have uh for instance uh GPT 3.5 turbo 16k you have 16 000 tokens which is more than enough for any chapter of a novel or a short story and then you can talk about that chapter that's how I get rapid feedback on my novels now I don't use it to draft because one it's not that good at drafting but also there's something very personal about writing the actual Pros anyways getting off topic so what I wanted to do was introduce you to my repeat my repo on GitHub called chat GPT custom instructions so this is a repo where I keep all of my specific uh like my favorite custom instructions that I use for chat GPT some of them I use here in the the actual web interface but more often than not they are used also for the um for the system prompt here so first thing that you need to know is that there's kind of a general flow a general pattern that I use to get the most out of these system window prompts or the custom instructions the first thing is first and foremost is a mission so you need to give it a mission a purpose this is an animating force that says this is what you're doing and why so it is an outcome or goal rather than a procedure one of the biggest problems that I see out there in the industry is that a lot of people still think very procedurally they're trying to treat the chat API like it's kind of a dumb Cog in a larger machine rather than treating it like a more intelligent component and so it really kind of blows people's mind when you can give it a goal and so I don't want to um I don't want to share specific goals that I've used for uh to help clients work on but what I can do is I can show you some of my personal projects so one of the very first ones that I did was the 18th century Scottish bar keep but with Vikings so the idea was to create an NPC and so the goal is to enable the chatbot to communicate in the Persona of a Scottish bar keep in an alternate history here let me switch over to the raw so you can see the whole thing um so yeah 18th century but with Vikings so the main goal is an alternate history in the setting of 1834 where Vikings still exists the dialect should be anglicized Scottish so I use main purpose instead of mission here I've switched to you I usually use Mission or goal but it all fundamentally means the same thing so the very first thing that I do is I give it kind of okay here is the biggest perspective of what you are doing here and I use the hashtag because this is markdown format and uh the chat GPT API is very familiar with markdown you can use Json you can use XML you can use yaml you don't even need to use markdown you can just write this out in in full paragraphs and it can work with it but it helps us understand but also I did notice that you get slightly better performance in the system window if you give it a little bit of structure uh so I gave it the main purpose honestly this is probably enough to get by but I gave it a little bit more instructions where I said like okay use this dialect utilize Scottish words and expressions that were prevalent in the early 19th century keep the language anglicized to ensure accessibility so again I'm kind of giving it a little bit more context kind of these from a software perspective you'd say that these might be the user requirements or the ux requirements uh for for the software specification sprinkle in some localized slang or idioms for authenticity but make sure they are comprehensible to a modern audience because you can get it to write stuff that is not comprehensible to a a modern audience and then I I gave it a personality so this is a barkeep so portray a warm approachable bar keep character Express opinions and attitudes typical of a Scottish Tavern owner use colloquial language and be prepared to share stories insights or rumors about the local area particularly involving Vikings interactions respond to inquiries about drinks food and lodgings as would be expected of a bar keep engage in light banter or serious conversation as the situation demands so what you can see here is I'm giving kind of general principles I'm I'm describing the character that I wanted to have now one thing that you could add is you could give it a little bit more background which I've demonstrated in other videos but there's no reason that you couldn't say like the barkeep's daughter is named Bessie and that barkeep owns a cow and here's some other uh contextual information that you can ask about um but yeah so like here let me just go ahead and put this into the API and I'll show you and I'll say like um here let's switch over to four because it's a little bit more part uh more intelligent so I'll say get me a beer and uh you can see hey right away lad I've got a fine brew that will put fire in your belly so it's r e l uh so you know it's obviously able to confabulate this personality but if I say like you know what's your uh daughter's name it'll probably let's see how it reacts I mean Bonnie alas her name's Moira so that's that's a legitimate thing but in this case it's confabulating that because I didn't give it one and it's doing its best to follow the instructions um now if you had this NPC set in a larger game you might have to like Define so you might say like uh other characters so like you know wife is gonna be um let's say Bessie and uh daughter is we'll just say Moira um Moira and then the town um let's see the town is named um Island Dales that's a generic name um okay so where are we by the way and so what it'll do is it'll pick up this information one thing that is a more advanced operation is you can update the system message in real time after every interaction um which there was a previous chat bot that I did where you can use out-of-band processes to inject more information into the system window and those are called placeholders I'll show you that in just a second Island ales blah blah okay so you see it can pick up on that information and so what you could do is you can use what's called retrieval augmented generation which is you have an out-of-band process that looks at the conversation as it's happening and then will inject more information that is relevant and you use what I use is just placeholder tags like this um something like that to replace uh stuff as you go so that is kind of an overview of what you can do so let's go back here um where did it go there we go okay so this is this is one of the first ones that I did um there's an so obviously that is a chat log but you don't have to use the chat API for chat so here's another one where I uh it's a diplomatic email generator and so the mission that I gave it is very simple your mission is to draft professional and diplomatic emails interaction schema so this is one of my favorite tags to use let me show you this one and we will actually we'll do a quick refresh clear the clear the cache okay Mission your mission is to draft professional and diplomatic emails so rather than telling it how to go about its job I say this is the outcome that I want interaction schema so interaction schema is a really useful tool to use in system prompts because it basically describes the interaction that it's going to get with the user because it expects the user tag to be a user message I said the user will give you either a rough draft or a set of requirements and points some kind of raw material for an oh whoops I didn't say email uh even though I had that typo it obviously figured out what I was trying to do uh you should ask a few questions to gain a better understanding of the underpinning reason and intent what is the email supposed to achieve what information must be conveyed um previous email the user may Supply you with an email that they are responding to make sure to ask if it's not clear that you so that you understand the context output principles maintain professionalism and diplomacy at all costs the user may be irritated and annoyed scared or otherwise not in the best frame of mind hence why they need help so add some language explaining why you shaped your email the way that you did so in this case this is really helpful especially like when I've got like a confusing email to reply to or like a contentious business email where it's like hey there's a there's a major misunderstanding so let's use that as an example um so like I need to reply to an email where there was a big misunderstanding um over contract fees I need to convey to build that I cannot do the contract at the rate he proposed um weekend of course keep the door open um but like this is just not worth my time and so then like here's what we'll do like I understand you want to communicate the bill so what it's doing is it's interviewing and saying like this is kind of what I what I want to uh convey and obviously like this is a super easy thing to do but the reason that you'd want to use this like for instance in an API rather than just in the chat GPT interface is you could automate this process uh where you know you have probably a plug-in for Microsoft Outlook or exchange or Gmail or whatever email you use where it's just like hey it looks like this is the email thread and so rather than replying directly to the email you just like give it the tone and it can say like hey blah blah blah so it says uh um I hope this message finds you well I personally don't need those kinds of introductions but I find that when I add these kinds of introductions to the email it really changes the tone of response where it's just like hey let's take let's take a minute just for a mild formality and some well wishing and that really that honestly really helps it's not something that I think of doing but whenever I use chat GPT or the API to help it's like yeah let's let's put that in there I'm writing in response to our recent discussions regarding the contract fees after careful consideration I regret to inform you that I'm unable to accept the proposed rate well I greatly value our business relationship and the potential opportunities the current rate does not align with the scope and complexity of the work involved I believe it is crucial for both parties involved to you know in a contract to feel that the terms are fair and Equitable I want to assure you that this decision does not close the door in future collaborations I'm more than willing to revisit the uh the conversation should circumstances change or if there's room for negotiation on the contract terms so this is pretty similar to an email that I've had to send because there was an honest misunderstanding over uh negotiated rates um and so it's like uh you know then you can say like uh this is good but we need to add something about law right and then it'll it'll redraft it so this is another example of how you can use it to either use it interactively or not necessarily interactively most of these are interactive here's an example of one that is not necessarily interactive so this one is an academic copy revisor so basically in my work with universities and researchers I do not have practice writing in the format that they require I write in my own format which tends to be very direct and succinct but academic writing tends to be a little bit more complex I don't particularly like that style but it is what is expected within that genre and so in this case I gave it this Mission oops where'd it go there we go let's do a quick refresh so in this case the the mission is revise and optimize and Mac academic rough drafts to provide clear and articulate final copies input rough draft copy from academic writings very succinct output revise an articulate final copy free of Errors um so I'm focusing on errors optimize for clarity expand and articulate expand awareness is necessary to explain complex Concepts if they're not sufficiently elucidated word economy maintain proper reward economy for academic texts avoid Superfluous words and unnecessary complexity I tried to tell it to do that but as you'll see it often is a little bit more loquacious than it needs to be style and tone maintain a consistent academic tone throughout the text simple language less is more many readers are not native English speakers so this tool is particularly useful for people who for whom English is not necessarily a first language or for people like how I used to be and just write way overly complex stuff and so like we'll say um the ace framework is a software blueprint or autonomous cognitive entities AKA um let's see fully autonomous machines and AI robots so this is obviously not professional and so we'll put this in here and so it'll rewrite a new paragraph the ace the ace and in parentheses autonomous cognitive entities framework serves as a software blueprint for the development of fully autonomous machines and AI artificial intelligence robots this framework provides the necessary guidelines and structure for creating machines that can operate independently without human intervention so you can see where it has it has basically doubled more a little bit more than doubled what I put in and it articulates it far more cleanly and completely and so this is this is an example where you could just have a pipeline that just chops up an academic you know piece of text or even a series of bullet points and then spits out something that is a little bit easier to read and a little bit more comprehensive so let's go through uh some of the some of the the guidelines that I've got here so you've seen a few examples so the general structure that I follow is first mission to context so you've probably seen in some of these where you provide some background info where you're at in a process or what this step is and why it needs to be done so it might not be intuitive as to you to say like okay well I can understand context there's a lot of understanding today that adding context improves the quality of API calls and and use of llms like chat gbt but when you tell it why something needs to happen and where in the process it is it generally has a better understanding of okay this is how I can perform this job a little bit better think of it like an assembly line in an assembly line you might have your one dedicated station so the example that I like to use is the painting station in an assembly line building cars you expect a car that is all the metal is attached right you're not going to do any more attaching a metal or welding and so but when you say you are at this point in the assembly line this is what you should expect to receive and this is the outcome we're looking for by the time you're done you've received the the you know the all metal body by the time you're done it should be fully painted and ready for engine mounting and wheel mounting and that sort of thing and so why why it needs to be done and where in the process you are really helps the model understand what it is that you need out of it for this particular step you can give it some rules which you saw some examples of the rules uh for instance for this the Scottish bar keep like do this don't do this it can be difficult sometimes chat GPT at least in its current version might have trouble following complex rules in fact this is why we saw really bad problems with Bing when it first came out and because it was kind of a more open-ended model and they didn't have quite as good rules defined and not quite as good alignment and so it could start to fly off the handle and they actually they still limit being conversations to uh at least for me they limit it to 30 uh back and forth because when you don't have it well aligned and the underlying model fine-tuned well as well as good rules defined it can you can get drift and drift was way way worse with older models before current alignment techniques you can give it some instructions so there there can be some very very specific instructions and so what I mean by this is okay the first thing you need to do is talk through the problem and then you give me an answer so it's like if this then that or do X Y and Z in this sequential order that's what I mean by instructions uh one thing to keep in mind is all of these different structures are completely optional you can use just one or two of them as you've seen from some of the examples here there's in some cases like here's my default set where literally it's just a set of rules and instructions uh like do this don't do this it's just basic principles of what to do I don't really give it a mission in that one um and the original like emotional investigation one um this is like it's it's got a very clear Mission it's very simple um so yeah uh anyways getting back down uh so after instructions I often will have like an expected input like again think of the assembly line uh metaphor or analogy where it's like this is what you should expect to receive from the user and in some cases you might have it say like okay you might get you know something simple like just one sentence or you might get a whole rough draft like with the email generator where it's like you might like you should expect to get a variety of different things it's not strictly required to tell it that but I find that the performance becomes much more consistent when you give it a little bit of context as to what to expect and how to handle that variance in in uh in what that input will be then you can describe the output format if necessary so for instance with um with the the uh the email generator let's see if we can go back to that real quick um so with the email generator you see that it because I told it to explain its reasoning it had this extra stuff but if I wanted to I could say you know don't include the subject only include the body of the email don't say anything else so that would be here like output principles I would change this and say um you know let's see do not include subject or anything else only write the body of the email so just really simple natural language instructions like that and if we if we only change that one thing and resubmit it so it it gives us the same introduction and then you see it remove the subject line it just gave us the body so through Rapid iteration on the playground here with the with the API you'll be able to get much better results to understand this kind of thing and you might see like oh hey like it's it's uh it's using a placeholder for my name and so what you might need to do is if in the API call you might say like you know uh username is and then you have a placeholder and I would replace this with Dave right when I'm when you know using it in production that sort of thing and sometimes it one one principle one rule of thumb that I follow is that it's better to give it too much context rather than not enough because it's better to have something and not need it than need something and not have it so that's a really important uh principle to follow um and then finally an example output so one of the best example outputs that I have is my slide deck maker so a lot of you really love my slide deck so this is the actual prompt that I use to help me make those slide decks today so let me show you how this looks here so in the case of do a quick refresh in the case of my slide deck maker I say Mission you are a slide deck builder you will be given a topic and will be expected to generate a slide deck text with a very specific format so again very clear Mission very simple input the user will give you a input of various kinds usually a topic or or a request like rural juror or a request this will be highly varied but your output must be super consistent so again I'm just telling it like you don't know exactly what you're going to get just do your best and it's pretty good at that output format so I describe the the requirements for the output format slide title two or three words Max and I can you can see that it is in title case um concept description of definition that should have been description or definition two or three complete sentences with word economy and then um three exactly Five Points characteristics or details in labeled list bullet format so I describe it very clearly um and so because if you just give it an example it might not understand the principles but in this case I get very very consistent format by first defining the output format and then giving in an example and so here's the speed chest example that I used in my terminal race condition video so speed chess speed chess is a variant of Chess blah blah quick decisions and you can see it has no other formatting it doesn't use markdown or anything and if I give it this and if I say like um here let's just say prompt engineering EG the art of using natural language with llms large uh language models to evoke the correct behavior from an AI deep learning uh uh model and so then that's all I gave it and I say generate a slide for for this for me prompt engineering prompt engineering is the process of crafting effective prompts to guide the responses of large language models llms it involves understanding the model's behavior and using natural language to evoke the desired output the goal is to maximize the utility of Aid learning models effective prompts crafting prompts to guide the model's responses understanding Model Behavior knowledge of how the model responds to inherent input or to different inputs eliciting desired output maximizing utility and deep learning models so this is obviously not exactly what I would put in my slide deck but it's a good start I would probably replace a couple of these with like you know using the English language so what I'll do is I'll kill that and I'll say some general principles include writing and English skills as these models ingest and output natural language uh other principles include ordered uh thinking such as with procedures or outcomes in mind this thinking is often not intuitive to people and requires practice and so now what it'll do is it'll look at just this kind of unstructured paragraph and it will reformat it so it's like okay writing skills English profession English proficiency I am English proficient I promise ordered thinking non-intuitive practice so now it has completely changed the list to kind of the things that I wanted it to say and uh the inspiration for this is because I often have college students either undergrad or grad students that are graduating or about to graduate or have just graduated and there's they ask me like what skills do I need and I'm like English and they're like what do you mean like to communicate with humans and I'm like no to communicate with the models and some of them don't get it but anyways so you this is this is an example of by by clearly defining the the output that I wanted and giving in an example in a mission it's able to do this really well and also one other example so when I talk about like latent content and cognitive capacity and reasoning ability I gave it a pretty specific um idea of what I wanted but this this particular prompt is also able to infer what I want um so I can say like what is the principle where um you increase the amount of something and then demand increases so I just gave it a question and it will still produce like a generally correct output so supply and demand supply and demand is an economic principle that describes the relationship between the availability of a particular product and the desire of consumers for that product is that a fundamental concept so blah blah increased demand increase Supply price determination market equilibrium economic indicator so even just by asking a question because I gave it such a clear Mission and the fact that it it should not respond to the question as a chat bot it's just going to generate a slide for me it did its best to infer I was like so this is not exactly what I'm saying um what is it uh called the something Paradox and so uh so now it's like ah javon's Paradox this is what you were thinking of um without without knowing what exactly I wanted it to write about it figured out that this is what I needed um this is not exactly the process that I went through to make some of my recent slides but you can see that by giving it very clear instructions and examples it's able to use its latent understanding to generate output that I need that I didn't know that I needed uh so yeah and then like uh let's do um the duck curve next duck curve the duck curve is a graph of power uh Power production of the course blah blah blah demand in production afternoon abundance Etc et cetera the duck curve if you're not familiar with is the fact that like uh energy production and energy demand varies throughout the day with the highest Spike being when people get home from work in the evening um anyways so I think you get the idea if you want to go ahead and just jump into my repo over here it's already got what like 70 Stars yeah 73 stars and and nine Forks I'm adding to this stuff all the time you see like you know two months ago two weeks ago four days ago three days ago I'm always updating these um these things because I come back to these all the time so I figured I might as well just share them so anyways thanks for watching I hope you got a lot out of this and you are a better prompt engineer for having watched this video like subscribe do all the things and uh cheers have a good one